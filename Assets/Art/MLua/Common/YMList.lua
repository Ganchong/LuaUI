---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 干冲.
--- DateTime: 2018/3/28 22:18
---

YMList = class("YMList")

local this = YMList

local _values = {}


--添加value值
function this:Add(value)
    if self:CheckValue(value) then
        _values[#_values+1] = value
    end
end

--在下标为index插入value值，原index以后的往后移
function this:Insert(value, index)
    if self:CheckValue(value) then
        table.insert(_values,index,value)
    end
end

--获取index处的值
function this:GetValue(index)
    if index<0 then
        LogError("YMList out of range")
        return nil
    end
    if index>#_values then
        LogError("YMList out of range")
        return nil
    end
    return _values[index]
end

--移除value
function this:Remove(value)
    local len = #_values
    for i = 1, len do
        if _values[i] == value then
            table.remove(_values,i)
            return
        end
    end
end

--移除下标为index的值
function this:Remove(index)
    table.remove(_values,index)
end

--移除末尾的值
function this:RemoveEnd()
    table.remove(_values)
end

--获取表的长度
function this:GetLength()
    return #_values
end

--排序
function this:Sort()

end

function this:AddRange(tb)

end

function this:ToString()
    local str = ""
    if #_values == 0 then
        str = "length is zero"
    end
    for i = 1, #_values do
        str = str.." value["..i.."]:".._values[i]
    end
    Log(str)
end

function this:ToString_01()
    for k, v in pairs(_values) do
        Log("K:"..k.."V:"..v)
    end
end

function this:ToString_03()
    Log(table.concat(_values,","))
end


--清除表
function this:Clear()
    for i = 1, #_values do
        _values[i] = nil
    end
end

--检查类型是否与表中的类型匹配
function this:CheckValue(value)
    local len = #_values
    if len>0 then
        local lastValue = _values[len]
        if type(value)~=type(lastValue) then
            LogError("The type you want to add value is error,please check it")
            return false
        end
    end
    return true
end

return this


