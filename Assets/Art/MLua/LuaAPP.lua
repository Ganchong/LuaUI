---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 干冲.
--- DateTime: 2018/3/22 19:28
---

--Lua应用
LuaAPP = LuaAPP or {}

--初始化
function LuaAPP.Init()
    LuaAPP.LauncherTimer()
    LuaAPP.RegisterStates()
    LuaAPP.ChangeState(StateNames.InitState)
end

---@return UIManager
function LuaAPP.GetUIManager()
    if _uiManager == nil then
    _uiManager = UIManager.new()
    end
    return _uiManager
end
---@return TimerManager
function LuaAPP.GetTimerManager()
    if _timerManager == nil then
        _timerManager = TimerManager.new()
    end
    return _timerManager
end
---@return BackGroundManager
function LuaAPP.GetBackGroundManager()
    if _backGroundManager == nil then
        _backGroundManager = BackGroundManager.new()
    end
    return _backGroundManager
end
---@return YMEvent
function LuaAPP.GetGlobalEvent()
    if _ymEvent == nil then
        _ymEvent = YMEvent.new()
    end
    return _ymEvent
end

--启动定时器
function LuaAPP.LauncherTimer()
    local handle = FixedUpdateBeat:CreateListener(LuaAPP.FixedUpdate,LuaAPP)
    FixedUpdateBeat:AddListener(handle)
end

--固定帧更新定时器
function LuaAPP.FixedUpdate()
    LuaAPP.GetTimerManager():Update()
end

--注册所有状态
function LuaAPP.RegisterStates()
    stateMap = {}
    for key, value in pairs(StateNames or {}) do
        stateMap[value] = require(value).new()
    end
end

--获取状态
function LuaAPP.GetState(stateName)
    return stateMap[stateName]
end

--切换状态
function LuaAPP.ChangeState(stateName)
    local state = stateMap[stateName]
    if state ~= nil then
        if LuaAPP.curState~=nil then
            LuaAPP.curState.Exit()
        end
        LuaAPP.curState = state
        LuaAPP.curState:Enter()
    else
        LogError(stateName)
    end
end

